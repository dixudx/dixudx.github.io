<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Stephen's Blog]]></title>
  <subtitle><![CDATA[To me, the past is black and white, but the future is always colorful.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://dixudx.github.io/"/>
  <updated>2015-09-28T08:07:07.000Z</updated>
  <id>http://dixudx.github.io/</id>
  
  <author>
    <name><![CDATA[Di Xu]]></name>
    <email><![CDATA[stephenhsu90@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Dynamically Show the Overall Progress of Running Jenkins Flows]]></title>
    <link href="http://dixudx.github.io/2015/09/28/Dynamically-Show-the-Overall-Progress-of-Running-Jenkins-Flows/"/>
    <id>http://dixudx.github.io/2015/09/28/Dynamically-Show-the-Overall-Progress-of-Running-Jenkins-Flows/</id>
    <published>2015-09-28T07:52:24.000Z</published>
    <updated>2015-09-28T08:07:07.000Z</updated>
    <content type="html"><![CDATA[<p>test</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>test</p>
]]>
    </summary>
    
      <category term="Jenkins" scheme="http://dixudx.github.io/tags/Jenkins/"/>
    
      <category term="ZeroMQ" scheme="http://dixudx.github.io/tags/ZeroMQ/"/>
    
      <category term="Projects" scheme="http://dixudx.github.io/categories/Projects/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[A Python-based Client for Rational Team Concert (RTC)]]></title>
    <link href="http://dixudx.github.io/2015/09/28/A-Python-based-Client-for-Rational-Team-Concert-RTC/"/>
    <id>http://dixudx.github.io/2015/09/28/A-Python-based-Client-for-Rational-Team-Concert-RTC/</id>
    <published>2015-09-28T06:50:51.000Z</published>
    <updated>2015-09-29T07:06:31.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Overture">Overture</h2><p>IBM® Rational Team Concert™, is built on the Jazz platform, allowing application development teams to use one tool to plan across teams, code, run standups, plan sprints, and track work. For more info, please refer to <a href="http://www.ibm.com/developerworks/downloads/r/rtc/" target="_blank" rel="external">the official website</a>.</p>
<p><img src="/images/IBM_Rational_Team_Concert.png" alt="IBM Rational Team Concert"></p>
<p>Currently there are no light-weighted, easy-used clients for <strong>Rational Team Concert</strong> (aka, <strong>RTC</strong>). Indeed there is an official RTC client, which is quite powerful, fully fledged and can be integrated with <strong>Eclipse</strong> as a plugin, but it is a GUI-based client. It is very hard to integrate with or be called by other programs. Also it is neither easy-installed nor light-weighted.</p>
<p>The most common scenario that I want to use such a client is to open a new <strong>RTC</strong> defect/change request/story when a <strong>Jenkins</strong> pipeline finishes.</p>
<p><img src="/images/rtc_web.gif" alt="IBM RTC Web"></p>
<p>I’ve searched all over the Internet, but found nothing. I think such a client should at least has below characteristics:</p>
<ul>
<li>easy to be installed;</li>
<li>light-weighted;</li>
<li>simple to use;</li>
<li>a command line tool without GUI;</li>
<li>at least supports some basic <strong>RTC</strong> usages, such as creating all kinds of <strong>Workitems</strong>, adding comments to the retrieved <strong>Workitems</strong> and etc;</li>
</ul>
<p>So I write such a Python-based client to implement these basic <strong>RTC</strong> scenarios.</p>
<h2 id="A_Python-based_Client:_RTCClient">A Python-based Client: RTCClient</h2><p>This client is named <a href="https://pypi.python.org/pypi/rtcclient" target="_blank" rel="external">rtcclient</a>, which has already been published to <a href="https://pypi.python.org/pypi" target="_blank" rel="external">Pypi</a>. You can install this client using <a href="https://pypi.python.org/pypi/pip" target="_blank" rel="external"><code>pip</code></a>:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install rtcclient</span><br></pre></td></tr></table></figure>
<p>Actually <a href="https://pypi.python.org/pypi/rtcclient" target="_blank" rel="external">rtcclient</a> is more like a library, which provides some basic classes and methods to interact with RTC server:</p>
<ul>
<li>Retrieves objects which contain the detailed information/configuration, including <strong>Project Areas</strong>, <strong>Team Areas</strong>, <strong>Workitems</strong>, Saved Queries, etc;</li>
<li>Creates/Opens all kinds of <strong>Workitems</strong> through self-customized templates or Copies from some existing <strong>Workitems</strong>;</li>
<li>Performs some actions on the retrieved <strong>Workitems</strong>;</li>
<li>Queries <strong>Workitems</strong> using specified filtered rules or directly from your saved queries;</li>
<li>More features will be implemented in the future versions;</li>
</ul>
<p>However <strong>this is not an official-released Python-based RTC client</strong>. There may be some bugs in this client. You can report the bugs using the links in the below section.</p>
<p>Also you are welcomed to open a new ticket if new features should be incorporated in this client.</p>
<p>This is an active project that I will keep on updating and maintaining.</p>
<h3 id="Important_Links">Important Links</h3><ul>
<li><p><a href="https://github.com/dixudx/rtcclient/issues?q=is%3Aopen+sort%3Acomments-desc" target="_blank" rel="external">Support and Bug-Reports</a></p>
</li>
<li><p><a href="https://github.com/dixudx/rtcclient" target="_blank" rel="external">Project Source Code</a></p>
</li>
<li><p><a href="https://readthedocs.org/projects/rtcclient/" target="_blank" rel="external">Project Documentation</a></p>
</li>
</ul>
<h3 id="Supported_Python_&amp;_RTC_Versions">Supported Python &amp; RTC Versions</h3><p>RTC Versions:</p>
<ul>
<li>5.0.1</li>
<li>5.0.2</li>
</ul>
<p>Python Versions:</p>
<ul>
<li>2.6</li>
<li>2.7</li>
<li>3.3</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Overture">Overture</h2><p>IBM® Rational Team Concert™, is built on the Jazz platform, allowing application development teams to use ]]>
    </summary>
    
      <category term="Python" scheme="http://dixudx.github.io/tags/Python/"/>
    
      <category term="RTC" scheme="http://dixudx.github.io/tags/RTC/"/>
    
      <category term="Rational Team Concert" scheme="http://dixudx.github.io/tags/Rational-Team-Concert/"/>
    
      <category term="pypi" scheme="http://dixudx.github.io/tags/pypi/"/>
    
      <category term="rtcclient" scheme="http://dixudx.github.io/tags/rtcclient/"/>
    
      <category term="Projects" scheme="http://dixudx.github.io/categories/Projects/"/>
    
  </entry>
  
</feed>
